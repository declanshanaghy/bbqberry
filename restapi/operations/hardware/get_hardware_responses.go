package hardware

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/declanshanaghy/bbqberry/models"
)

// GetHardwareOKCode is the HTTP code returned for type GetHardwareOK
const GetHardwareOKCode int = 200

/*GetHardwareOK The config was retrieved successfully

swagger:response getHardwareOK
*/
type GetHardwareOK struct {

	/*
	  In: Body
	*/
	Payload *models.HardwareConfig `json:"body,omitempty"`
}

// NewGetHardwareOK creates GetHardwareOK with default headers values
func NewGetHardwareOK() *GetHardwareOK {
	return &GetHardwareOK{}
}

// WithPayload adds the payload to the get hardware o k response
func (o *GetHardwareOK) WithPayload(payload *models.HardwareConfig) *GetHardwareOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get hardware o k response
func (o *GetHardwareOK) SetPayload(payload *models.HardwareConfig) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHardwareOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetHardwareDefault Unexpected error

swagger:response getHardwareDefault
*/
type GetHardwareDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetHardwareDefault creates GetHardwareDefault with default headers values
func NewGetHardwareDefault(code int) *GetHardwareDefault {
	if code <= 0 {
		code = 500
	}

	return &GetHardwareDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get hardware default response
func (o *GetHardwareDefault) WithStatusCode(code int) *GetHardwareDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get hardware default response
func (o *GetHardwareDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get hardware default response
func (o *GetHardwareDefault) WithPayload(payload *models.Error) *GetHardwareDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get hardware default response
func (o *GetHardwareDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHardwareDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
