package alerts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdateAlertHandlerFunc turns a function with the right signature into a update alert handler
type UpdateAlertHandlerFunc func(UpdateAlertParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateAlertHandlerFunc) Handle(params UpdateAlertParams) middleware.Responder {
	return fn(params)
}

// UpdateAlertHandler interface for that can handle valid update alert params
type UpdateAlertHandler interface {
	Handle(UpdateAlertParams) middleware.Responder
}

// NewUpdateAlert creates a new http.Handler for the update alert operation
func NewUpdateAlert(ctx *middleware.Context, handler UpdateAlertHandler) *UpdateAlert {
	return &UpdateAlert{Context: ctx, Handler: handler}
}

/*UpdateAlert swagger:route PUT /alerts Alerts updateAlert

Clear alert warning for a probe

*/
type UpdateAlert struct {
	Context *middleware.Context
	Handler UpdateAlertHandler
}

func (o *UpdateAlert) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewUpdateAlertParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
