package lights

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"

	"github.com/declanshanaghy/bbqberry/models"
)

// GetGrillLightsHandlerFunc turns a function with the right signature into a get grill lights handler
type GetGrillLightsHandlerFunc func(GetGrillLightsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetGrillLightsHandlerFunc) Handle(params GetGrillLightsParams) middleware.Responder {
	return fn(params)
}

// GetGrillLightsHandler interface for that can handle valid get grill lights params
type GetGrillLightsHandler interface {
	Handle(GetGrillLightsParams) middleware.Responder
}

// NewGetGrillLights creates a new http.Handler for the get grill lights operation
func NewGetGrillLights(ctx *middleware.Context, handler GetGrillLightsHandler) *GetGrillLights {
	return &GetGrillLights{Context: ctx, Handler: handler}
}

/*GetGrillLights swagger:route GET /lights/grill Lights getGrillLights

Get the colors currently showing on the grill lights

*/
type GetGrillLights struct {
	Context *middleware.Context
	Handler GetGrillLightsHandler
}

func (o *GetGrillLights) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetGrillLightsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetGrillLightsOKBody get grill lights o k body
// swagger:model GetGrillLightsOKBody
type GetGrillLightsOKBody []*models.LightStrip
