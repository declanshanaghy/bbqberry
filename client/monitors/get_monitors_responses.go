package monitors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/declanshanaghy/bbqberry/models"
)

// GetMonitorsReader is a Reader for the GetMonitors structure.
type GetMonitorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMonitorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMonitorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetMonitorsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetMonitorsOK creates a GetMonitorsOK with default headers values
func NewGetMonitorsOK() *GetMonitorsOK {
	return &GetMonitorsOK{}
}

/*GetMonitorsOK handles this case with default header values.

The currently configured monitor(s) were retrieved successfully
*/
type GetMonitorsOK struct {
	Payload models.TemperatureMonitors
}

func (o *GetMonitorsOK) Error() string {
	return fmt.Sprintf("[GET /monitors][%d] getMonitorsOK  %+v", 200, o.Payload)
}

func (o *GetMonitorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMonitorsDefault creates a GetMonitorsDefault with default headers values
func NewGetMonitorsDefault(code int) *GetMonitorsDefault {
	return &GetMonitorsDefault{
		_statusCode: code,
	}
}

/*GetMonitorsDefault handles this case with default header values.

Unexpected error
*/
type GetMonitorsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get monitors default response
func (o *GetMonitorsDefault) Code() int {
	return o._statusCode
}

func (o *GetMonitorsDefault) Error() string {
	return fmt.Sprintf("[GET /monitors][%d] getMonitors default  %+v", o._statusCode, o.Payload)
}

func (o *GetMonitorsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
