package monitors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/declanshanaghy/bbqberry/models"
)

// CreateMonitorReader is a Reader for the CreateMonitor structure.
type CreateMonitorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateMonitorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateMonitorCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewCreateMonitorDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateMonitorCreated creates a CreateMonitorCreated with default headers values
func NewCreateMonitorCreated() *CreateMonitorCreated {
	return &CreateMonitorCreated{}
}

/*CreateMonitorCreated handles this case with default header values.

The monitor was created successfully
*/
type CreateMonitorCreated struct {
}

func (o *CreateMonitorCreated) Error() string {
	return fmt.Sprintf("[POST /monitors][%d] createMonitorCreated ", 201)
}

func (o *CreateMonitorCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateMonitorDefault creates a CreateMonitorDefault with default headers values
func NewCreateMonitorDefault(code int) *CreateMonitorDefault {
	return &CreateMonitorDefault{
		_statusCode: code,
	}
}

/*CreateMonitorDefault handles this case with default header values.

Unexpected error
*/
type CreateMonitorDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the create monitor default response
func (o *CreateMonitorDefault) Code() int {
	return o._statusCode
}

func (o *CreateMonitorDefault) Error() string {
	return fmt.Sprintf("[POST /monitors][%d] createMonitor default  %+v", o._statusCode, o.Payload)
}

func (o *CreateMonitorDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
