package lights

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewUpdateGrillLightsParams creates a new UpdateGrillLightsParams object
// with the default values initialized.
func NewUpdateGrillLightsParams() *UpdateGrillLightsParams {
	var (
		periodDefault = int64(500000)
	)
	return &UpdateGrillLightsParams{
		Period: periodDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateGrillLightsParamsWithTimeout creates a new UpdateGrillLightsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateGrillLightsParamsWithTimeout(timeout time.Duration) *UpdateGrillLightsParams {
	var (
		periodDefault = int64(500000)
	)
	return &UpdateGrillLightsParams{
		Period: periodDefault,

		timeout: timeout,
	}
}

// NewUpdateGrillLightsParamsWithContext creates a new UpdateGrillLightsParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateGrillLightsParamsWithContext(ctx context.Context) *UpdateGrillLightsParams {
	var (
		periodDefault = int64(500000)
	)
	return &UpdateGrillLightsParams{
		Period: periodDefault,

		Context: ctx,
	}
}

// NewUpdateGrillLightsParamsWithHTTPClient creates a new UpdateGrillLightsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateGrillLightsParamsWithHTTPClient(client *http.Client) *UpdateGrillLightsParams {
	var (
		periodDefault = int64(500000)
	)
	return &UpdateGrillLightsParams{
		Period:     periodDefault,
		HTTPClient: client,
	}
}

/*UpdateGrillLightsParams contains all the parameters to send to the API endpoint
for the update grill lights operation typically these are written to a http.Request
*/
type UpdateGrillLightsParams struct {

	/*Name
	  The light show to enable

	*/
	Name string
	/*Period
	  The time period between updates in microseconds

	*/
	Period int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update grill lights params
func (o *UpdateGrillLightsParams) WithTimeout(timeout time.Duration) *UpdateGrillLightsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update grill lights params
func (o *UpdateGrillLightsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update grill lights params
func (o *UpdateGrillLightsParams) WithContext(ctx context.Context) *UpdateGrillLightsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update grill lights params
func (o *UpdateGrillLightsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update grill lights params
func (o *UpdateGrillLightsParams) WithHTTPClient(client *http.Client) *UpdateGrillLightsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update grill lights params
func (o *UpdateGrillLightsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the update grill lights params
func (o *UpdateGrillLightsParams) WithName(name string) *UpdateGrillLightsParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the update grill lights params
func (o *UpdateGrillLightsParams) SetName(name string) {
	o.Name = name
}

// WithPeriod adds the period to the update grill lights params
func (o *UpdateGrillLightsParams) WithPeriod(period int64) *UpdateGrillLightsParams {
	o.SetPeriod(period)
	return o
}

// SetPeriod adds the period to the update grill lights params
func (o *UpdateGrillLightsParams) SetPeriod(period int64) {
	o.Period = period
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateGrillLightsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param name
	qrName := o.Name
	qName := qrName
	if qName != "" {
		if err := r.SetQueryParam("name", qName); err != nil {
			return err
		}
	}

	// query param period
	qrPeriod := o.Period
	qPeriod := swag.FormatInt64(qrPeriod)
	if qPeriod != "" {
		if err := r.SetQueryParam("period", qPeriod); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
