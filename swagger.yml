swagger: "2.0"
info:
  description: "Rest API definition for BBQ Berry"
  version: "v1"
  title: "BBQ Berry"
basePath: /v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /temperatures/monitors/{probe}:
    get:
      operationId: getMonitors
      tags:
        - Temperature
      summary: "Get monitor settings for the requested probe"
      parameters:
        - name: probe
          in: path
          description: The termerature probe for which to retrieve configured monitors
          required: true
          type: integer
          format: int32
          default: 0
          minimum: 0
          maximum: 3
      responses:
        200:
          description: "The currently configured monitor(s) were retrieved successfully"
          schema:
            $ref: "#/definitions/TemperatureMonitors"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /temperatures/probes/reading:
    get:
      operationId: getProbeReadings
      tags:
        - Temperature
      summary: "Get the current temperature reading from the requested probe(s)"
      parameters:
        - name: probe
          in: query
          description: The termerature probe to read from (or all probes if the given probe
            number is 0 or not specified)
          required: false
          type: integer
          format: int32
          default: 0
          minimum: 0
          maximum: 4
      responses:
        200:
          description: "Temperature was read successfully"
          schema:
            $ref: "#/definitions/TemperatureReading"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /hello:
    get:
      operationId: hello
      tags:
        - Example
      summary: "Example versioned hello world endpoint"
      responses:
        200:
          description: "Sample hello world endpoint"
          schema:
            $ref: "#/definitions/Hello"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /health:
    get:
      operationId: health
      tags:
        - Health
      summary: "UNVERSIONED Health check endpoint. Required for all services"
      description: |
        Performs detailed internal checks and reports back whether or not the service is operating properly
        https://confluence.splunk.com/display/PROD/Common+Microservice+Endpoints+and+Version+Management
      responses:
        200:
          description: "Service is operating normally"
          schema:
            $ref: "#/definitions/Health"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

definitions:
  TemperatureMonitors:
    type: object
    additionalProperties:
      type: array
      items:
        $ref: "#/definitions/TemperatureMonitor"
  TemperatureMonitor:
    type: object
    required:
      - probe
      - scale
      - min
      - max
    properties:
      scale:
        type: string
        description: The temperature scale
      min:
        type: number
        format: float
        description: The minimum temperature, below which an alert will be generated
      max:
        type: number
        format: float
        description: The maximium temperature, below which an alert will be generated
      probe:
        type: integer
        format: int32
        minimum: 0
        maximum: 3
        default: 0
  TemperatureReadings:
    type: array
    items:
      $ref: "#/definitions/TemperatureReading"
  TemperatureReading:
    type: object
    required:
      - kelvin
      - celcuis
      - fahrenheit
      - probe
      - time
    properties:
      kelvin:
        type: number
        format: float
        description: Temperature reading in degrees kelvin
      celcuis:
        type: number
        format: float
        description: Temperature reading in degrees celcuis
      fahrenheit:
        type: number
        format: float
        description: Temperature reading in degrees fahrenheit
      time:
        type: string
        format: date-time
        description: The date and time of the reading
      probe:
        type: integer
        format: int32
        minimum: 0
        maximum: 7
        default: 0
  Hello:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        description: An example message
  Error:
    type: object
    required:
      - code
    properties:
      code:
        type: integer
        format: int32
        description: |
          Internal error code. In generic error cases this may be a HTTP status code.
          Therefore internal error codes should not conflict with HTTP status codes.
      message:
        type: string
        description: A brief description of the error
      fields:
        type: string
        description: Optional list of field names which caused the error
  ServiceInfo:
    type: object
    required:
      - name
      - version
    properties:
      name:
        type: string
        description: Service name
      version:
        type: string
        description: Service API version
      error:
        $ref: "#/definitions/Error"
  Health:
    type: object
    required:
      - healthy
      - service_info
    properties:
      healthy:
        type: boolean
        description: Flag indicating whether or not ALL internal checks passed
      error:
        $ref: "#/definitions/Error"
      service_info:
        $ref: "#/definitions/ServiceInfo"
